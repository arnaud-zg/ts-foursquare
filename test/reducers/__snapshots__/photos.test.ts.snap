// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`reducers/lists/getPhotosDetailsAsync should get state after action: getPhotosDetailsAsync.cancel with action: {"payload": "An user cancelled this action", "type": "GET_PHOTOS_DETAILS_CANCEL"} 1`] = `
Object {
  "entities": Object {},
}
`;

exports[`reducers/lists/getPhotosDetailsAsync should get state after action: getPhotosDetailsAsync.cancel with action: {"payload": "An user cancelled this action", "type": "GET_PHOTOS_DETAILS_CANCEL"} 2`] = `
Object {
  "getPhotosDetailsAsync": Object {
    "cancelReason": "An user cancelled this action",
    "entityIds": Array [],
  },
}
`;

exports[`reducers/lists/getPhotosDetailsAsync should get state after action: getPhotosDetailsAsync.cancel with action: {"payload": "An user cancelled this action", "type": "GET_PHOTOS_DETAILS_CANCEL"} 3`] = `
Object {
  "getPhotosDetailsAsync": Object {
    "hasError": false,
    "isCancelled": true,
    "isLoading": false,
  },
}
`;

exports[`reducers/lists/getPhotosDetailsAsync should get state after action: getPhotosDetailsAsync.failure with action: {"payload": [Error: An error occurred], "type": "GET_PHOTOS_DETAILS_FAILURE"} 1`] = `
Object {
  "entities": Object {},
}
`;

exports[`reducers/lists/getPhotosDetailsAsync should get state after action: getPhotosDetailsAsync.failure with action: {"payload": [Error: An error occurred], "type": "GET_PHOTOS_DETAILS_FAILURE"} 2`] = `
Object {
  "getPhotosDetailsAsync": Object {
    "entityIds": Array [],
    "error": [Error: An error occurred],
  },
}
`;

exports[`reducers/lists/getPhotosDetailsAsync should get state after action: getPhotosDetailsAsync.failure with action: {"payload": [Error: An error occurred], "type": "GET_PHOTOS_DETAILS_FAILURE"} 3`] = `
Object {
  "getPhotosDetailsAsync": Object {
    "hasError": true,
    "isCancelled": false,
    "isLoading": false,
  },
}
`;

exports[`reducers/lists/getPhotosDetailsAsync should get state after action: getPhotosDetailsAsync.success with action: {"payload": [Object], "type": "GET_PHOTOS_DETAILS_SUCCESS"} 1`] = `
Object {
  "entities": Object {
    "51e4151c498e60b5d17bc721": Object {
      "createdAt": 1373902108,
      "height": 612,
      "id": "51e4151c498e60b5d17bc721",
      "prefix": "https://igx.4sqi.net/img/general/",
      "source": Object {
        "name": "Instagram",
        "url": "http://instagram.com",
      },
      "suffix": "/1022386_wEd7VXnWzp5lajvRLtAPunoiufDSIq8PMEtEuIH2Tzg.jpg",
      "user": Object {
        "firstName": "John",
        "gender": "male",
        "id": "12345678",
        "lastName": "Doe",
        "photo": Object {
          "prefix": "https://igx.4sqi.net/img/user/",
          "suffix": "/YXNQ5O4TLYSNHMKY.jpg",
        },
      },
      "venue": Object {
        "categories": Array [
          Object {
            "icon": Object {
              "prefix": "https://ss3.4sqi.net/img/categories_v2/arts_entertainment/museum_art_",
              "suffix": ".png",
            },
            "id": "4bf58dd8d48988d18f941735",
            "name": "Art Museum",
            "pluralName": "Art Museums",
            "primary": true,
            "shortName": "Art Museum",
          },
        ],
        "contact": Object {},
        "id": "427c0500f964a52097211fe3",
        "location": Object {
          "address": "1000 5th Ave",
          "cc": "US",
          "city": "New York",
          "country": "United States",
          "crossStreet": "btwn E 80th & E 84th St",
          "formattedAddress": Array [
            "1000 5th Ave (btwn E 80th & E 84th St)",
            "New York, NY 10028",
            "United States",
          ],
          "lat": 40.779150129460504,
          "lng": -73.9627398125614,
          "postalCode": "10028",
          "state": "NY",
        },
        "name": "The Metropolitan Museum of Art (Metropolitan Museum of Art)",
      },
      "visibility": "public",
      "width": 612,
    },
  },
}
`;

exports[`reducers/lists/getPhotosDetailsAsync should get state after action: getPhotosDetailsAsync.success with action: {"payload": [Object], "type": "GET_PHOTOS_DETAILS_SUCCESS"} 2`] = `
Object {
  "getPhotosDetailsAsync": Object {
    "entityIds": Array [
      "51e4151c498e60b5d17bc721",
    ],
  },
}
`;

exports[`reducers/lists/getPhotosDetailsAsync should get state after action: getPhotosDetailsAsync.success with action: {"payload": [Object], "type": "GET_PHOTOS_DETAILS_SUCCESS"} 3`] = `
Object {
  "getPhotosDetailsAsync": Object {
    "hasError": false,
    "isCancelled": false,
    "isLoading": false,
  },
}
`;
